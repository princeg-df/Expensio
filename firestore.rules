
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow any authenticated user to create a placeholder user for invites
      allow create: if request.resource.data.isPlaceholder == true && request.auth != null;
      // Allow users to read their own data, or admins to read any user data
      allow read: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == 'princegupta619@gmail.com';
       // Allow any authenticated user to see the list of users for group invites
      allow list: if request.auth != null;
      // Allow users to update or delete their own document
      allow update, delete: if request.auth.uid == userId;

      match /{document=**} {
        allow read, write: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == 'princegupta619@gmail.com';
      }
    }
    
    match /groups/{groupId} {
      allow read, update: if resource.data.members.hasAny([request.auth.uid]);
      allow create: if request.auth != null;
      // Allow leaving a group
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
                      request.resource.data.members.size() == resource.data.members.size() - 1 &&
                      !request.resource.data.members.hasAny([request.auth.uid]);
    }
  }
}
