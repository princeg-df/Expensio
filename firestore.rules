rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return request.auth.token.email == 'princegupta619@gmail.com';
    }
    
    // New function to check if the requesting user has accepted a share from the resource owner
    function isSharedWith(ownerId) {
      return exists(/databases/$(database)/documents/shares/$(request.auth.uid)_$(ownerId)) &&
             get(/databases/$(database)/documents/shares/$(request.auth.uid)_$(ownerId)).data.status == 'accepted';
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Allow read if owner, admin, or shared with
      allow read: if isOwner(userId) || isAdmin() || isSharedWith(userId);
      allow write: if isOwner(userId) || isAdmin();

      // Subcollections (transactions, emis, autopays)
      // Allow read if owner, admin, or shared with. Write only for owner/admin.
      match /transactions/{docId} {
        allow read: if isOwner(userId) || isAdmin() || isSharedWith(userId);
        allow write: if isOwner(userId) || isAdmin();
      }
      match /emis/{docId} {
        allow read: if isOwner(userId) || isAdmin() || isSharedWith(userId);
        allow write: if isOwner(userId) || isAdmin();
      }
      match /autopays/{docId} {
        allow read: if isOwner(userId) || isAdmin() || isSharedWith(userId);
        allow write: if isOwner(userId) || isAdmin();
      }
    }

    // --- Shares Collection ---
    match /shares/{shareId} {
       allow read: if isSignedIn() && (request.auth.uid == resource.data.ownerUid || request.auth.uid == resource.data.sharedWithUid);
       
       allow create: if isSignedIn() && request.auth.uid == request.resource.data.ownerUid;
       
       // Allow update if the user is the one it was shared with, they are accepting it, and their UID is being added.
       allow update: if isSignedIn() && 
                      request.auth.uid == resource.data.sharedWithUid && 
                      request.resource.data.status == 'accepted' &&
                      request.resource.data.sharedWithUid == request.auth.uid;
                      
       allow delete: if isSignedIn() && (request.auth.uid == resource.data.ownerUid || request.auth.uid == resource.data.sharedWithUid);
    }

    // --- Groups Collection ---
    match /groups/{groupId} {
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.members;

      match /expenses/{expenseId} {
        allow read, write: if isSignedIn() && 
                            request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
      }
    }
  }
}
