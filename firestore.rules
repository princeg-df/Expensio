
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Any authenticated user can create a user document, IF it's a placeholder.
      // This is for the "invite to group" feature.
      allow create: if request.resource.data.isPlaceholder == true && request.auth != null;

      // Users can only read their own document. But can list all users to invite.
      allow list: if request.auth != null;
      allow read, update, delete: if request.auth.uid == userId;
      
      // Allow full access to subcollections for the owner
      match /{collection}/{docId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    match /groups/{groupId} {
      allow read, update: if resource.data.members.hasAny([request.auth.uid]);
      allow create: if request.auth != null;

      match /expenses/{expenseId} {
        allow read, create: if get(/databases/$(database)/documents/groups/$(groupId)).data.members.hasAny([request.auth.uid]);
      }
    }
  }
}
