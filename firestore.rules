
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth.token.email == 'princegupta619@gmail.com';
    }

    match /users/{userId} {
      // Allow authenticated users to list documents, needed for inviting users
      allow list: if request.auth != null;
      // Allow users to read their own document OR if the user is an admin
      allow read: if request.auth.uid == userId || isAdmin();
      // Allow authenticated users to create placeholder users
      allow create: if request.resource.data.isPlaceholder == true && request.auth != null;
      // Allow users to update or delete their own document OR if the user is an admin
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if request.auth.uid == userId || isAdmin();

      // Admin can read/write any sub-collection data. Users can only access their own.
      match /{document=**} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }
    
    match /groups/{groupId} {
      allow create: if request.auth != null;
      // Only group members can read group data or update the members list (to leave)
      allow read, update: if request.auth.uid in resource.data.members;
      
      // Only members can access expenses
      match /expenses/{expenseId} {
         allow read, write: if get(/databases/$(database)/documents/groups/$(groupId)).data.members.hasAny([request.auth.uid]);
      }
    }
  }
}
